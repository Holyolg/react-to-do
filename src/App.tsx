import { CircularProgressbarComponent } from "./components/CircularProgressbarComponent.tsx";
import { Form } from "./components/Form.tsx";
import { ITask, Task } from "./components/Task.tsx";
import { useTheme } from "./hooks/use-theme.tsx";
import { getLocalStorage } from "./lib/get-local-storage.ts";
import { useEffect, useState } from "react";
import React from "react";

import "./App.css";

export default function App() {
	const [tasks, setTasks] = useState(getLocalStorage());
	const { theme, setTheme } = useTheme();

	const handleThemeClick = () => {
		setTheme(theme === "light" ? "dark" : "light");
	};

	useEffect(() => {
		localStorage.setItem("tasks", JSON.stringify(tasks));
	}, [tasks]);

	const doneTasks = tasks.filter((tasks: ITask) => tasks.status === false);

	return (
		<div className="wrapper">
			<div className="content">
				<div className="theme-toggle__groups">
					<button className="theme-toggle" onClick={handleThemeClick}>
						{theme === "light" ? "‚òÄÔ∏è" : "üåî"}
					</button>
				</div>
				<h1>–°–ø–∏—Å–æ–∫ –¥–µ–ª –Ω–∞ React ‚úçÔ∏è</h1>
				<div className="wrapper__info">
					{/* <div className="info">
						<p>–í—Å–µ–≥–æ: {tasks.length}</p>
						<p>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {doneTasks.length}</p>
					</div> */}
					<div className="wrapper__progressbar">
						<CircularProgressbarComponent tasks={tasks} doneTasks={doneTasks} />
					</div>
				</div>
				<main>
					<Form setTasks={setTasks} tasks={tasks} />
				</main>

				<Task tasks={tasks} setTasks={setTasks} />
				<div className="guide">
					<h2>
						‚úèÔ∏è–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ - –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –Ω–∞–∂–º–∏ –Ω–∞
						–∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ Enter –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ. <br />
						‚úîÔ∏è–ß—Ç–æ–±—ã –æ–±–æ–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é - –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ
						<br />
						üíæ–ó–∞–¥–∞—á–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
					</h2>
				</div>
			</div>
		</div>
	);
}
